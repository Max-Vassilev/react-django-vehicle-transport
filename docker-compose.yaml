services:
  backend:
    container_name: backend_container
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend_image
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_DB=vehicle_transport
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - DJANGO_SETTINGS_MODULE=your_project.settings
    command: >
      sh -c "while ! nc -z database 5432; do sleep 1; done &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - database
    volumes:
      - ./backend:/app
      - static_volume:/app/static

  frontend:
    container_name: frontend_container
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend_image
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development

  database:
    container_name: database_container
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vehicle_transport
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d vehicle_transport"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres_data:
  static_volume:

# services:
#   backend:
#     container_name: backend_container
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     image: backend_image
#     ports:
#       - "8000:8000"
#     command: >
#       sh -c "python manage.py migrate &&
#              python manage.py runserver 0.0.0.0:8000"
#     depends_on:
#       database:
#         condition: service_healthy

#   frontend:
#     container_name: frontend_container
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     image: frontend_image
#     ports:
#       - "5173:5173"

#   database:
#     container_name: database_container
#     image: postgres:15
#     environment:
#       POSTGRES_USER: user
#       POSTGRES_PASSWORD: password
#       POSTGRES_DB: vehicle_transport
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U user"]
#       interval: 10s
#       timeout: 5s
#       retries: 5


